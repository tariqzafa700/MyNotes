// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Notes Component renders correctly 1`] = `
<WithStyles(Notes)>
  <Notes
    classes={
      Object {
        "button": "Notes-button-4",
        "container": "Notes-container-1",
        "content": "Notes-content-3",
        "title": "Notes-title-2",
      }
    }
  >
    <div>
      <form
        className="Notes-container-1"
        onSubmit={[Function]}
      >
        <TextField
          className="Notes-title-2"
          id="margin-title"
          inputProps={
            Object {
              "maxLength": 255,
            }
          }
          label="Title"
          margin="normal"
          onChange={[Function]}
          required={false}
          select={false}
          value=""
        >
          <WithStyles(FormControl)
            className="Notes-title-2"
            margin="normal"
            required={false}
          >
            <FormControl
              className="Notes-title-2"
              classes={
                Object {
                  "fullWidth": "MuiFormControl-fullWidth-8",
                  "marginDense": "MuiFormControl-marginDense-7",
                  "marginNormal": "MuiFormControl-marginNormal-6",
                  "root": "MuiFormControl-root-5",
                }
              }
              component="div"
              disabled={false}
              error={false}
              fullWidth={false}
              margin="normal"
              required={false}
            >
              <div
                className="MuiFormControl-root-5 MuiFormControl-marginNormal-6 Notes-title-2"
              >
                <WithStyles(InputLabel)
                  htmlFor="margin-title"
                >
                  <InputLabel
                    classes={
                      Object {
                        "animated": "MuiInputLabel-animated-13",
                        "formControl": "MuiInputLabel-formControl-10",
                        "marginDense": "MuiInputLabel-marginDense-11",
                        "root": "MuiInputLabel-root-9",
                        "shrink": "MuiInputLabel-shrink-12",
                      }
                    }
                    disableAnimation={false}
                    htmlFor="margin-title"
                  >
                    <WithStyles(FormLabel)
                      className="MuiInputLabel-root-9 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                      data-shrink={false}
                      htmlFor="margin-title"
                    >
                      <FormLabel
                        className="MuiInputLabel-root-9 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                        classes={
                          Object {
                            "asterisk": "MuiFormLabel-asterisk-18",
                            "disabled": "MuiFormLabel-disabled-16",
                            "error": "MuiFormLabel-error-17",
                            "focused": "MuiFormLabel-focused-15",
                            "root": "MuiFormLabel-root-14",
                          }
                        }
                        component="label"
                        data-shrink={false}
                        htmlFor="margin-title"
                      >
                        <label
                          className="MuiFormLabel-root-14 MuiInputLabel-root-9 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                          data-shrink={false}
                          htmlFor="margin-title"
                        >
                          Title
                        </label>
                      </FormLabel>
                    </WithStyles(FormLabel)>
                  </InputLabel>
                </WithStyles(InputLabel)>
                <WithStyles(Input)
                  id="margin-title"
                  inputProps={
                    Object {
                      "maxLength": 255,
                    }
                  }
                  onChange={[Function]}
                  value=""
                >
                  <Input
                    classes={
                      Object {
                        "disabled": "MuiInput-disabled-22",
                        "error": "MuiInput-error-24",
                        "focused": "MuiInput-focused-21",
                        "formControl": "MuiInput-formControl-20",
                        "fullWidth": "MuiInput-fullWidth-26",
                        "input": "MuiInput-input-27",
                        "inputMarginDense": "MuiInput-inputMarginDense-28",
                        "inputMultiline": "MuiInput-inputMultiline-29",
                        "inputType": "MuiInput-inputType-30",
                        "inputTypeSearch": "MuiInput-inputTypeSearch-31",
                        "multiline": "MuiInput-multiline-25",
                        "root": "MuiInput-root-19",
                        "underline": "MuiInput-underline-23",
                      }
                    }
                    disableUnderline={false}
                    fullWidth={false}
                    id="margin-title"
                    inputProps={
                      Object {
                        "maxLength": 255,
                      }
                    }
                    multiline={false}
                    onChange={[Function]}
                    type="text"
                    value=""
                  >
                    <div
                      className="MuiInput-root-19 MuiInput-formControl-20 MuiInput-underline-23"
                    >
                      <input
                        aria-invalid={false}
                        className="MuiInput-input-27"
                        disabled={false}
                        id="margin-title"
                        maxLength={255}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        type="text"
                        value=""
                      />
                    </div>
                  </Input>
                </WithStyles(Input)>
              </div>
            </FormControl>
          </WithStyles(FormControl)>
        </TextField>
        <TextField
          className="Notes-content-3"
          id="margin-normal"
          inputProps={
            Object {
              "maxLength": 1024,
            }
          }
          label="Content"
          multiline={true}
          onChange={[Function]}
          required={false}
          rows={10}
          select={false}
          value=""
        >
          <WithStyles(FormControl)
            className="Notes-content-3"
            required={false}
          >
            <FormControl
              className="Notes-content-3"
              classes={
                Object {
                  "fullWidth": "MuiFormControl-fullWidth-8",
                  "marginDense": "MuiFormControl-marginDense-7",
                  "marginNormal": "MuiFormControl-marginNormal-6",
                  "root": "MuiFormControl-root-5",
                }
              }
              component="div"
              disabled={false}
              error={false}
              fullWidth={false}
              margin="none"
              required={false}
            >
              <div
                className="MuiFormControl-root-5 Notes-content-3"
              >
                <WithStyles(InputLabel)
                  htmlFor="margin-normal"
                >
                  <InputLabel
                    classes={
                      Object {
                        "animated": "MuiInputLabel-animated-13",
                        "formControl": "MuiInputLabel-formControl-10",
                        "marginDense": "MuiInputLabel-marginDense-11",
                        "root": "MuiInputLabel-root-9",
                        "shrink": "MuiInputLabel-shrink-12",
                      }
                    }
                    disableAnimation={false}
                    htmlFor="margin-normal"
                  >
                    <WithStyles(FormLabel)
                      className="MuiInputLabel-root-9 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                      data-shrink={false}
                      htmlFor="margin-normal"
                    >
                      <FormLabel
                        className="MuiInputLabel-root-9 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                        classes={
                          Object {
                            "asterisk": "MuiFormLabel-asterisk-18",
                            "disabled": "MuiFormLabel-disabled-16",
                            "error": "MuiFormLabel-error-17",
                            "focused": "MuiFormLabel-focused-15",
                            "root": "MuiFormLabel-root-14",
                          }
                        }
                        component="label"
                        data-shrink={false}
                        htmlFor="margin-normal"
                      >
                        <label
                          className="MuiFormLabel-root-14 MuiInputLabel-root-9 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                          data-shrink={false}
                          htmlFor="margin-normal"
                        >
                          Content
                        </label>
                      </FormLabel>
                    </WithStyles(FormLabel)>
                  </InputLabel>
                </WithStyles(InputLabel)>
                <WithStyles(Input)
                  id="margin-normal"
                  inputProps={
                    Object {
                      "maxLength": 1024,
                    }
                  }
                  multiline={true}
                  onChange={[Function]}
                  rows={10}
                  value=""
                >
                  <Input
                    classes={
                      Object {
                        "disabled": "MuiInput-disabled-22",
                        "error": "MuiInput-error-24",
                        "focused": "MuiInput-focused-21",
                        "formControl": "MuiInput-formControl-20",
                        "fullWidth": "MuiInput-fullWidth-26",
                        "input": "MuiInput-input-27",
                        "inputMarginDense": "MuiInput-inputMarginDense-28",
                        "inputMultiline": "MuiInput-inputMultiline-29",
                        "inputType": "MuiInput-inputType-30",
                        "inputTypeSearch": "MuiInput-inputTypeSearch-31",
                        "multiline": "MuiInput-multiline-25",
                        "root": "MuiInput-root-19",
                        "underline": "MuiInput-underline-23",
                      }
                    }
                    disableUnderline={false}
                    fullWidth={false}
                    id="margin-normal"
                    inputProps={
                      Object {
                        "maxLength": 1024,
                      }
                    }
                    multiline={true}
                    onChange={[Function]}
                    rows={10}
                    type="text"
                    value=""
                  >
                    <div
                      className="MuiInput-root-19 MuiInput-formControl-20 MuiInput-multiline-25 MuiInput-underline-23"
                    >
                      <textarea
                        aria-invalid={false}
                        className="MuiInput-input-27 MuiInput-inputMultiline-29"
                        disabled={false}
                        id="margin-normal"
                        maxLength={1024}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        rows={10}
                        type="text"
                        value=""
                      />
                    </div>
                  </Input>
                </WithStyles(Input)>
              </div>
            </FormControl>
          </WithStyles(FormControl)>
        </TextField>
        <WithStyles(Button)
          className="Notes-button-4"
          color="primary"
          type="submit"
          variant="raised"
        >
          <Button
            className="Notes-button-4"
            classes={
              Object {
                "colorInherit": "MuiButton-colorInherit-51",
                "contained": "MuiButton-contained-41",
                "containedPrimary": "MuiButton-containedPrimary-42",
                "containedSecondary": "MuiButton-containedSecondary-43",
                "disabled": "MuiButton-disabled-50",
                "extendedFab": "MuiButton-extendedFab-48",
                "fab": "MuiButton-fab-47",
                "flat": "MuiButton-flat-37",
                "flatPrimary": "MuiButton-flatPrimary-38",
                "flatSecondary": "MuiButton-flatSecondary-39",
                "focusVisible": "MuiButton-focusVisible-49",
                "fullWidth": "MuiButton-fullWidth-55",
                "label": "MuiButton-label-33",
                "mini": "MuiButton-mini-52",
                "outlined": "MuiButton-outlined-40",
                "raised": "MuiButton-raised-44",
                "raisedPrimary": "MuiButton-raisedPrimary-45",
                "raisedSecondary": "MuiButton-raisedSecondary-46",
                "root": "MuiButton-root-32",
                "sizeLarge": "MuiButton-sizeLarge-54",
                "sizeSmall": "MuiButton-sizeSmall-53",
                "text": "MuiButton-text-34",
                "textPrimary": "MuiButton-textPrimary-35",
                "textSecondary": "MuiButton-textSecondary-36",
              }
            }
            color="primary"
            component="button"
            disableFocusRipple={false}
            disabled={false}
            fullWidth={false}
            mini={false}
            size="medium"
            type="submit"
            variant="raised"
          >
            <WithStyles(ButtonBase)
              className="MuiButton-root-32 MuiButton-contained-41 MuiButton-containedPrimary-42 MuiButton-raised-44 MuiButton-raisedPrimary-45 Notes-button-4"
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="MuiButton-focusVisible-49"
              type="submit"
            >
              <ButtonBase
                centerRipple={false}
                className="MuiButton-root-32 MuiButton-contained-41 MuiButton-containedPrimary-42 MuiButton-raised-44 MuiButton-raisedPrimary-45 Notes-button-4"
                classes={
                  Object {
                    "disabled": "MuiButtonBase-disabled-57",
                    "focusVisible": "MuiButtonBase-focusVisible-58",
                    "root": "MuiButtonBase-root-56",
                  }
                }
                component="button"
                disableRipple={false}
                disableTouchRipple={false}
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="MuiButton-focusVisible-49"
                tabIndex="0"
                type="submit"
              >
                <button
                  className="MuiButtonBase-root-56 MuiButton-root-32 MuiButton-contained-41 MuiButton-containedPrimary-42 MuiButton-raised-44 MuiButton-raisedPrimary-45 Notes-button-4"
                  disabled={false}
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex="0"
                  type="submit"
                >
                  <span
                    className="MuiButton-label-33"
                  >
                    Create
                  </span>
                  <WithStyles(TouchRipple)
                    center={false}
                    innerRef={[Function]}
                  >
                    <TouchRipple
                      center={false}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child-63",
                          "childLeaving": "MuiTouchRipple-childLeaving-64",
                          "childPulsate": "MuiTouchRipple-childPulsate-65",
                          "ripple": "MuiTouchRipple-ripple-60",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-62",
                          "rippleVisible": "MuiTouchRipple-rippleVisible-61",
                          "root": "MuiTouchRipple-root-59",
                        }
                      }
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        className="MuiTouchRipple-root-59"
                        component="span"
                        enter={true}
                        exit={true}
                      >
                        <span
                          className="MuiTouchRipple-root-59"
                        />
                      </TransitionGroup>
                    </TouchRipple>
                  </WithStyles(TouchRipple)>
                </button>
              </ButtonBase>
            </WithStyles(ButtonBase)>
          </Button>
        </WithStyles(Button)>
      </form>
      <WithStyles(List)>
        <List
          classes={
            Object {
              "dense": "MuiList-dense-68",
              "padding": "MuiList-padding-67",
              "root": "MuiList-root-66",
              "subheader": "MuiList-subheader-69",
            }
          }
          component="ul"
          dense={false}
          disablePadding={false}
        >
          <ul
            className="MuiList-root-66 MuiList-padding-67"
          />
        </List>
      </WithStyles(List)>
    </div>
  </Notes>
</WithStyles(Notes)>
`;
